document.addEventListener("DOMContentLoaded", function () {
  // ‚úÖ Kh·ªüi t·∫°o EmailJS
  emailjs.init("T4hhw4qecN_5Z5g-q"); // <-- thay b·∫±ng PUBLIC KEY c·ªßa b·∫°n

  const showLoginBtn = document.getElementById("showLogin");
  const showRegisterBtn = document.getElementById("showRegister");
  const authBox = document.getElementById("authBox");

  const loginForm = document.getElementById("loginForm");
  const registerForm = document.getElementById("registerForm");

  const loginUsername = document.getElementById("loginUsername");
  const loginPassword = document.getElementById("loginPassword");
  const regUsername = document.getElementById("regUsername");
  const regPassword = document.getElementById("regPassword");
  const regConfirm = document.getElementById("regConfirm");
  const recovery = document.getElementById("recovery");

  // üëâ M·ªü h·ªôp ƒëƒÉng nh·∫≠p/ƒëƒÉng k√Ω
  showLoginBtn.onclick = () => {
    authBox.style.display = "block";
    switchForm("login");
  };
  showRegisterBtn.onclick = () => {
    authBox.style.display = "block";
    switchForm("register");
  };

  function switchForm(mode) {
    loginForm.style.display = mode === "login" ? "block" : "none";
    registerForm.style.display = mode === "register" ? "block" : "none";
  }

  function closeAuth() {
    authBox.style.display = "none";
  }

  // ‚úÖ C·∫≠p nh·∫≠t giao di·ªán n√∫t ƒëƒÉng nh·∫≠p/ƒëƒÉng k√Ω/ƒëƒÉng xu·∫•t
  function updateAuthButtons() {
    const isLoggedIn = !!localStorage.getItem("currentUser");
    document.getElementById("showLogin").style.display = isLoggedIn ? "none" : "inline-block";
    document.getElementById("showRegister").style.display = isLoggedIn ? "none" : "inline-block";
    document.getElementById("logoutBtn").style.display = isLoggedIn ? "inline-block" : "none";
  }

  // ‚úÖ ƒêƒÉng k√Ω
  window.register = function () {
    const u = regUsername.value.trim();
    const p = regPassword.value;
    const c = regConfirm.value;
    const r = recovery.value.trim();

    // Ki·ªÉm tra email h·ª£p l·ªá
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!u || !p || !c || !r) return alert("‚ö†Ô∏è ƒêi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
    if (!emailRegex.test(r)) return alert("‚ùó Email kh√¥ng h·ª£p l·ªá.");
    if (p !== c) return alert("‚ùó M·∫≠t kh·∫©u kh√¥ng kh·ªõp.");
    if (localStorage.getItem(`user_${u}`)) return alert("‚ùå T√†i kho·∫£n ƒë√£ t·ªìn t·∫°i.");

    const user = { password: p, recovery: r };
    localStorage.setItem(`user_${u}`, JSON.stringify(user));
    alert("‚úÖ ƒêƒÉng k√Ω th√†nh c√¥ng!");
    switchForm("login");
  };

  // ‚úÖ ƒêƒÉng nh·∫≠p
  window.login = function () {
    const u = loginUsername.value.trim();
    const p = loginPassword.value;
    const data = localStorage.getItem(`user_${u}`);

    if (!data) return alert("‚ùå T√†i kho·∫£n kh√¥ng t·ªìn t·∫°i.");
    const { password } = JSON.parse(data);
    if (p !== password) return alert("‚ùå Sai m·∫≠t kh·∫©u.");

    alert(`‚úÖ Ch√†o m·ª´ng ${u}!`);
    localStorage.setItem("currentUser", u);

    // N·∫øu ch∆∞a c√≥ profile th√¨ t·∫°o profile/avatar m·∫∑c ƒë·ªãnh cho user n√†y
    if (!localStorage.getItem(`profile_${u}`)) {
      localStorage.setItem(`profile_${u}`, JSON.stringify({
        name: "USER 1",
        desc: "",
        social: {}
      }));
      localStorage.setItem(`avatar_${u}`, "3.jpg"); // Avatar m·∫∑c ƒë·ªãnh cho user n√†y
    }

    closeAuth();
    updateAuthButtons();
    location.reload();
  };

  // ‚úÖ ƒêƒÉng xu·∫•t
  window.logout = function () {
    localStorage.removeItem("currentUser");
    updateAuthButtons();
    alert("üö™ ƒê√£ ƒëƒÉng xu·∫•t!");
    location.reload();
  };

  // ‚úÖ Qu√™n m·∫≠t kh·∫©u (G·ª≠i Email)
  window.forgot = function () {
    const u = prompt("üîç Nh·∫≠p t√™n t√†i kho·∫£n b·∫°n qu√™n:");
    const data = localStorage.getItem(`user_${u}`);
    if (!data) return alert("‚ùå Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n.");
    const { password, recovery } = JSON.parse(data);

    emailjs.send("service_9053cdv", "template_zrscmkl", {
      to_email: recovery,
      message: `üîê M·∫≠t kh·∫©u c·ªßa b·∫°n l√†: ${password}`
    })
    .then(() => alert("üìß ƒê√£ g·ª≠i m·∫≠t kh·∫©u v·ªÅ email kh√¥i ph·ª•c."))
    .catch((err) => {
      console.error("L·ªói g·ª≠i email:", err);
      alert("‚ö†Ô∏è G·ª≠i email th·∫•t b·∫°i.");
    });
  };

  // N√∫t ƒë√≥ng auth box
  window.closeAuthBox = function () {
    authBox.style.display = "none";
  };

  // G·ªçi khi load trang
  updateAuthButtons();
});